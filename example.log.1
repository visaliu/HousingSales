DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@26bff1
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@26bff1
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@16f1079
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@16f1079
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@166ca9d
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@166ca9d
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6a5539
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@17c4869
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@76cf48
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@76cf48
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@76cf48
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@b2384f
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@b2384f
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@b2384f
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@f9af83
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@cf09e8
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@cf09e8
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@cf09e8
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@31f68c
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@31f68c
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@31f68c
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@b32e3e
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@19a2c08
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@1cb4f5f
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1cb4f5f
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@194089b
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@1acdf2e
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1acdf2e
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@1835480
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1835480
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1b365ed
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@bada02
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@d3381f
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@1bba99
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1bba99
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@ac5762
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@17cf65c
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1bcf236
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@13ed2f0
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1ad9bb2
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@17d4a0d
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1862f56
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@12c404
INFO main org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {4.0.5.Final}
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
DEBUG main org.hibernate.cfg.Configuration - Preparing to build session factory with filters : {}
INFO main com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
DEBUG main org.hibernate.engine.jdbc.internal.JdbcServicesImpl - Database ->
       name : MySQL
    version : 5.6.25-log
      major : 5
      minor : 6
DEBUG main org.hibernate.engine.jdbc.internal.JdbcServicesImpl - Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.38 ( Revision: fe541c166cec739c74cc727c5da96c1028b4834a )
      major : 5
      minor : 1
DEBUG main org.hibernate.engine.jdbc.internal.JdbcServicesImpl - JDBC version : 4.0
DEBUG main org.hibernate.engine.jdbc.cursor.internal.StandardRefCursorSupport - Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
INFO main org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
DEBUG main org.hibernate.cfg.Configuration - Processing hbm.xml files
DEBUG main org.hibernate.cfg.Configuration - Process annotated classes
DEBUG main org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: com.visa.demo.entity.TestEntity
DEBUG main org.hibernate.cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG main org.hibernate.cfg.annotations.EntityBinder - Import with entity name TestEntity
DEBUG main org.hibernate.cfg.annotations.EntityBinder - Bind entity com.visa.demo.entity.TestEntity on table test
DEBUG main org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(test), mappingColumn=id, insertable=true, updatable=true, unique=false}
DEBUG main org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property id with lazy=false
DEBUG main org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.visa.demo.entity.TestEntity:id]
DEBUG main org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for id
DEBUG main org.hibernate.cfg.annotations.PropertyBinder - Building property id
DEBUG main org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(test), mappingColumn=name, insertable=true, updatable=true, unique=false}
DEBUG main org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property name with lazy=false
DEBUG main org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.visa.demo.entity.TestEntity:name]
DEBUG main org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for name
DEBUG main org.hibernate.cfg.annotations.PropertyBinder - Building property name
DEBUG main org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for id
DEBUG main org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for name
DEBUG main org.hibernate.cfg.Configuration - Processing fk mappings (*ToOne and JoinedSubclass)
DEBUG main org.hibernate.cfg.Configuration - Processing extends queue
DEBUG main org.hibernate.cfg.Configuration - Processing extends queue
DEBUG main org.hibernate.cfg.Configuration - Processing collection mappings
DEBUG main org.hibernate.cfg.Configuration - Processing native query and ResultSetMapping mappings
DEBUG main org.hibernate.cfg.Configuration - Processing association property references
DEBUG main org.hibernate.cfg.Configuration - Creating tables' unique integer identifiers
DEBUG main org.hibernate.cfg.Configuration - Processing foreign key constraints
DEBUG main org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
DEBUG main org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
DEBUG main org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
DEBUG main org.hibernate.cfg.SettingsFactory - Automatic flush during beforeCompletion(): disabled
DEBUG main org.hibernate.cfg.SettingsFactory - Automatic session close at end of transaction: disabled
DEBUG main org.hibernate.cfg.SettingsFactory - JDBC batch size: 15
DEBUG main org.hibernate.cfg.SettingsFactory - JDBC batch updates for versioned data: disabled
DEBUG main org.hibernate.cfg.SettingsFactory - Scrollable result sets: enabled
DEBUG main org.hibernate.cfg.SettingsFactory - Wrap result sets: disabled
DEBUG main org.hibernate.cfg.SettingsFactory - JDBC3 getGeneratedKeys(): enabled
DEBUG main org.hibernate.cfg.SettingsFactory - multi-tenancy strategy : NONE
DEBUG main org.hibernate.cfg.SettingsFactory - Connection release mode: auto
DEBUG main org.hibernate.cfg.SettingsFactory - Using BatchFetchStyle : LEGACY
DEBUG main org.hibernate.cfg.SettingsFactory - Maximum outer join fetch depth: 2
DEBUG main org.hibernate.cfg.SettingsFactory - Default batch fetch size: 1
DEBUG main org.hibernate.cfg.SettingsFactory - Generate SQL with comments: disabled
DEBUG main org.hibernate.cfg.SettingsFactory - Order SQL updates by primary key: disabled
DEBUG main org.hibernate.cfg.SettingsFactory - Order SQL inserts for batching: disabled
DEBUG main org.hibernate.cfg.SettingsFactory - Default null ordering: none
DEBUG main org.hibernate.cfg.SettingsFactory - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
INFO main org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory - HHH000397: Using ASTQueryTranslatorFactory
DEBUG main org.hibernate.cfg.SettingsFactory - Query language substitutions: {}
DEBUG main org.hibernate.cfg.SettingsFactory - JPA-QL strict compliance: disabled
DEBUG main org.hibernate.cfg.SettingsFactory - Second-level cache: enabled
DEBUG main org.hibernate.cfg.SettingsFactory - Query cache: disabled
DEBUG main org.hibernate.cache.internal.RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
DEBUG main org.hibernate.cfg.SettingsFactory - Optimize cache for minimal puts: disabled
DEBUG main org.hibernate.cfg.SettingsFactory - Structured second-level cache entries: disabled
DEBUG main org.hibernate.cfg.SettingsFactory - Second-level cache direct-reference entries: disabled
DEBUG main org.hibernate.cfg.SettingsFactory - Automatic eviction of collection cache: disabled
DEBUG main org.hibernate.cfg.SettingsFactory - Statistics: disabled
DEBUG main org.hibernate.cfg.SettingsFactory - Deleted entity synthetic identifier rollback: disabled
DEBUG main org.hibernate.cfg.SettingsFactory - Default entity-mode: pojo
DEBUG main org.hibernate.cfg.SettingsFactory - Named query checking : enabled
DEBUG main org.hibernate.cfg.SettingsFactory - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
DEBUG main org.hibernate.cfg.SettingsFactory - Allow initialization of lazy state outside session : : disabled
DEBUG main org.hibernate.cfg.SettingsFactory - JTA Track by Thread: enabled
DEBUG main org.hibernate.internal.SessionFactoryImpl - Building session factory
DEBUG main org.hibernate.internal.SessionFactoryImpl - Session factory constructed with filter configurations : {}
DEBUG main org.hibernate.internal.SessionFactoryImpl - Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=C:\Program Files (x86)\Java\jdk1.8.0_73\jre\bin, java.vm.version=25.73-b02, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) Client VM, file.encoding.pkg=sun.io, idea.launcher.port=7535, user.script=, user.country=CN, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=, java.vm.specification.name=Java Virtual Machine Specification, user.dir=E:\visa文档\workSpace\housingSales, javax.persistence.sharedCache.mode=UNSPECIFIED, java.runtime.version=1.8.0_73-b02, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.endorsed.dirs=C:\Program Files (x86)\Java\jdk1.8.0_73\jre\lib\endorsed, os.arch=x86, java.io.tmpdir=C:\Users\ADMINI~1\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 10, sun.jnu.encoding=GBK, java.library.path=C:\Program Files (x86)\Java\jdk1.8.0_73\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\ProgramData\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;D:\apache-maven-3.2.1\bin;C:\Program Files (x86)\Java\jdk1.8.0_73\bin;C:\Program Files (x86)\Microsoft SQL Server\90\Tools\binn\;C:\Program Files (x86)\Microsoft SQL Server\100\Tools\Binn\VSShell\Common7\IDE\;C:\Program Files (x86)\Microsoft SQL Server\100\Tools\Binn\;C:\Program Files\Microsoft SQL Server\100\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\100\DTS\Binn\;D:\Program Files\Ruby21-x64\bin;D:\Program Files\nodejs\;D:\Program Files\Git\cmd;C:\Program Files (x86)\IDM Computer Solutions\UltraEdit\;C:\Users\Administrator\AppData\Roaming\npm;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;D:\Program Files (x86)\sonar\sonar-scanner-2.5\bin;., hibernate.ejb.persistenceUnitName=default, java.specification.name=Java Platform API Specification, java.class.version=52.0, sun.management.compiler=HotSpot Client Compiler, os.version=10.0, user.home=C:\Users\Administrator, user.timezone=Asia/Shanghai, java.awt.printerjob=sun.awt.windows.WPrinterJob, java.specification.version=1.8, idea.launcher.bin.path=D:\JetBrains\IntelliJ IDEA 14.1.3\bin, file.encoding=UTF-8, javax.persistence.nonJtaDataSource={
	CreateTime:"2016-11-15 18:27:16",
	ActiveCount:0,
	PoolingCount:1,
	CreateCount:1,
	DestroyCount:0,
	CloseCount:1,
	ConnectCount:1,
	Connections:[
		{ID:19854726, ConnectTime:"2016-11-15 18:27:17", UseCount:1, LastActiveTime:"2016-11-15 18:27:17"}
	]
}, hibernate.format_sql=true, user.name=Administrator, java.class.path=D:\JetBrains\IntelliJ IDEA 14.1.3\lib\idea_rt.jar;D:\JetBrains\IntelliJ IDEA 14.1.3\plugins\junit\lib\junit-rt.jar;C:\Program Files (x86)\Java\jdk1.8.0_73\jre\lib\charsets.jar;C:\Program Files (x86)\Java\jdk1.8.0_73\jre\lib\deploy.jar;C:\Program Files (x86)\Java\jdk1.8.0_73\jre\lib\javaws.jar;C:\Program Files (x86)\Java\jdk1.8.0_73\jre\lib\jce.jar;C:\Program Files (x86)\Java\jdk1.8.0_73\jre\lib\jfr.jar;C:\Program Files (x86)\Java\jdk1.8.0_73\jre\lib\jfxswt.jar;C:\Program Files (x86)\Java\jdk1.8.0_73\jre\lib\jsse.jar;C:\Program Files (x86)\Java\jdk1.8.0_73\jre\lib\management-agent.jar;C:\Program Files (x86)\Java\jdk1.8.0_73\jre\lib\plugin.jar;C:\Program Files (x86)\Java\jdk1.8.0_73\jre\lib\resources.jar;C:\Program Files (x86)\Java\jdk1.8.0_73\jre\lib\rt.jar;C:\Program Files (x86)\Java\jdk1.8.0_73\jre\lib\ext\access-bridge-32.jar;C:\Program Files (x86)\Java\jdk1.8.0_73\jre\lib\ext\cldrdata.jar;C:\Program Files (x86)\Java\jdk1.8.0_73\jre\lib\ext\dnsns.jar;C:\Program Files (x86)\Java\jdk1.8.0_73\jre\lib\ext\jaccess.jar;C:\Program Files (x86)\Java\jdk1.8.0_73\jre\lib\ext\jfxrt.jar;C:\Program Files (x86)\Java\jdk1.8.0_73\jre\lib\ext\localedata.jar;C:\Program Files (x86)\Java\jdk1.8.0_73\jre\lib\ext\nashorn.jar;C:\Program Files (x86)\Java\jdk1.8.0_73\jre\lib\ext\sunec.jar;C:\Program Files (x86)\Java\jdk1.8.0_73\jre\lib\ext\sunjce_provider.jar;C:\Program Files (x86)\Java\jdk1.8.0_73\jre\lib\ext\sunmscapi.jar;C:\Program Files (x86)\Java\jdk1.8.0_73\jre\lib\ext\sunpkcs11.jar;C:\Program Files (x86)\Java\jdk1.8.0_73\jre\lib\ext\zipfs.jar;E:\visa文档\workSpace\housingSales\target\test-classes;E:\visa文档\workSpace\housingSales\target\classes;C:\Users\Administrator\.m2\repository\junit\junit\4.11\junit-4.11.jar;C:\Users\Administrator\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-context\4.0.5.RELEASE\spring-context-4.0.5.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-aop\4.0.5.RELEASE\spring-aop-4.0.5.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-beans\4.0.5.RELEASE\spring-beans-4.0.5.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-core\4.0.5.RELEASE\spring-core-4.0.5.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-expression\4.0.5.RELEASE\spring-expression-4.0.5.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-webmvc\4.0.5.RELEASE\spring-webmvc-4.0.5.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-web\4.0.5.RELEASE\spring-web-4.0.5.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-orm\4.0.5.RELEASE\spring-orm-4.0.5.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-jdbc\4.0.5.RELEASE\spring-jdbc-4.0.5.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-tx\4.0.5.RELEASE\spring-tx-4.0.5.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-test\4.0.5.RELEASE\spring-test-4.0.5.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\mockito\mockito-core\1.9.5\mockito-core-1.9.5.jar;C:\Users\Administrator\.m2\repository\org\objenesis\objenesis\1.0\objenesis-1.0.jar;C:\Users\Administrator\.m2\repository\com\jayway\jsonpath\json-path\0.9.1\json-path-0.9.1.jar;C:\Users\Administrator\.m2\repository\net\minidev\json-smart\1.2\json-smart-1.2.jar;C:\Users\Administrator\.m2\repository\org\slf4j\slf4j-api\1.7.5\slf4j-api-1.7.5.jar;C:\Users\Administrator\.m2\repository\org\slf4j\slf4j-nop\1.7.7\slf4j-nop-1.7.7.jar;C:\Users\Administrator\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Administrator\.m2\repository\javax\servlet\javax.servlet-api\3.1-b09\javax.servlet-api-3.1-b09.jar;C:\Users\Administrator\.m2\repository\javax\servlet\jstl\1.2\jstl-1.2.jar;C:\Users\Administrator\.m2\repository\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;C:\Users\Administrator\.m2\repository\commons-lang\commons-lang\2.6\commons-lang-2.6.jar;C:\Users\Administrator\.m2\repository\org\aspectj\aspectjweaver\1.8.1\aspectjweaver-1.8.1.jar;C:\Users\Administrator\.m2\repository\org\springframework\security\spring-security-web\3.2.4.RELEASE\spring-security-web-3.2.4.RELEASE.jar;C:\Users\Administrator\.m2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;C:\Users\Administrator\.m2\repository\org\springframework\security\spring-security-core\3.2.4.RELEASE\spring-security-core-3.2.4.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\security\spring-security-config\3.2.4.RELEASE\spring-security-config-3.2.4.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\hibernate\hibernate-core\4.3.6.Final\hibernate-core-4.3.6.Final.jar;C:\Users\Administrator\.m2\repository\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;C:\Users\Administrator\.m2\repository\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;C:\Users\Administrator\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;C:\Users\Administrator\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\Administrator\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\Administrator\.m2\repository\org\hibernate\common\hibernate-commons-annotations\4.0.5.Final\hibernate-commons-annotations-4.0.5.Final.jar;C:\Users\Administrator\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\Administrator\.m2\repository\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;C:\Users\Administrator\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Administrator\.m2\repository\org\jboss\jandex\1.1.0.Final\jandex-1.1.0.Final.jar;C:\Users\Administrator\.m2\repository\org\hibernate\hibernate-entitymanager\4.3.6.Final\hibernate-entitymanager-4.3.6.Final.jar;C:\Users\Administrator\.m2\repository\org\springframework\data\spring-data-jpa\1.7.0.RELEASE\spring-data-jpa-1.7.0.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\data\spring-data-commons\1.9.0.RELEASE\spring-data-commons-1.9.0.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\aspectj\aspectjrt\1.8.2\aspectjrt-1.8.2.jar;C:\Users\Administrator\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.7\jcl-over-slf4j-1.7.7.jar;C:\Users\Administrator\.m2\repository\com\alibaba\druid\1.0.18\druid-1.0.18.jar;C:\Program Files (x86)\Java\jdk1.8.0_73\lib\jconsole.jar;C:\Program Files (x86)\Java\jdk1.8.0_73\lib\tools.jar;C:\Users\Administrator\.m2\repository\mysql\mysql-connector-java\5.1.38\mysql-connector-java-5.1.38.jar;C:\Users\Administrator\.m2\repository\commons-fileupload\commons-fileupload\1.3.1\commons-fileupload-1.3.1.jar;C:\Users\Administrator\.m2\repository\commons-io\commons-io\2.4\commons-io-2.4.jar;C:\Users\Administrator\.m2\repository\com\alibaba\fastjson\1.1.41\fastjson-1.1.41.jar;C:\Users\Administrator\.m2\repository\commons-httpclient\commons-httpclient\3.1\commons-httpclient-3.1.jar;C:\Users\Administrator\.m2\repository\commons-codec\commons-codec\1.2\commons-codec-1.2.jar;C:\Users\Administrator\.m2\repository\net\sf\ehcache\ehcache-core\2.6.9\ehcache-core-2.6.9.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-context-support\4.0.5.RELEASE\spring-context-support-4.0.5.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\projectlombok\lombok\1.16.4\lombok-1.16.4.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, javax.persistence.validation.mode=AUTO, java.vm.specification.version=1.8, sun.arch.data.model=32, java.home=C:\Program Files (x86)\Java\jdk1.8.0_73\jre, sun.java.command=com.intellij.rt.execution.application.AppMain com.intellij.rt.execution.junit.JUnitStarter -ideVersion5 com.visa.demo.ServerTestTest,testTest2, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.specification.vendor=Oracle Corporation, user.language=zh, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, sharing, java.version=1.8.0_73, java.ext.dirs=C:\Program Files (x86)\Java\jdk1.8.0_73\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files (x86)\Java\jdk1.8.0_73\jre\lib\resources.jar;C:\Program Files (x86)\Java\jdk1.8.0_73\jre\lib\rt.jar;C:\Program Files (x86)\Java\jdk1.8.0_73\jre\lib\sunrsasign.jar;C:\Program Files (x86)\Java\jdk1.8.0_73\jre\lib\jsse.jar;C:\Program Files (x86)\Java\jdk1.8.0_73\jre\lib\jce.jar;C:\Program Files (x86)\Java\jdk1.8.0_73\jre\lib\charsets.jar;C:\Program Files (x86)\Java\jdk1.8.0_73\jre\lib\jfr.jar;C:\Program Files (x86)\Java\jdk1.8.0_73\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=windows, sun.cpu.isalist=pentium_pro+mmx pentium_pro pentium+mmx pentium i486 i386 i86}
DEBUG main org.hibernate.secure.spi.JaccIntegrator - Skipping JACC integration as it was not enabled
DEBUG main org.hibernate.engine.spi.CascadeStyles - External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: com.visa.demo.entity.TestEntity
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select id from test where id =?
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select testentity_.id, testentity_.name as name2_0_ from test testentity_ where testentity_.id=?
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into test (name, id) values (?, ?)
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update test set name=? where id=?
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from test where id=?
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Identity insert: insert into test (name) values (?)
DEBUG main org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@efc4b3]
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : name
DEBUG main org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
DEBUG main org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
DEBUG main org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=com.visa.demo.entity.TestEntity)
    - Returns
       - EntityReturnImpl(entity=com.visa.demo.entity.TestEntity, querySpaceUid=<gen:0>, path=com.visa.demo.entity.TestEntity)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.visa.demo.entity.TestEntity)
          - SQL table alias mapping - testentity0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG main org.hibernate.loader.entity.plan.EntityLoader - Static select for entity com.visa.demo.entity.TestEntity [NONE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?
DEBUG main org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a9c4b0]
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : name
DEBUG main org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
DEBUG main org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
DEBUG main org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=com.visa.demo.entity.TestEntity)
    - Returns
       - EntityReturnImpl(entity=com.visa.demo.entity.TestEntity, querySpaceUid=<gen:0>, path=com.visa.demo.entity.TestEntity)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.visa.demo.entity.TestEntity)
          - SQL table alias mapping - testentity0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG main org.hibernate.loader.entity.plan.EntityLoader - Static select for entity com.visa.demo.entity.TestEntity [READ]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?
DEBUG main org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a54d]
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : name
DEBUG main org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
DEBUG main org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
DEBUG main org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=com.visa.demo.entity.TestEntity)
    - Returns
       - EntityReturnImpl(entity=com.visa.demo.entity.TestEntity, querySpaceUid=<gen:0>, path=com.visa.demo.entity.TestEntity)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.visa.demo.entity.TestEntity)
          - SQL table alias mapping - testentity0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG main org.hibernate.loader.entity.plan.EntityLoader - Static select for entity com.visa.demo.entity.TestEntity [UPGRADE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update
DEBUG main org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d9b663]
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : name
DEBUG main org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
DEBUG main org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
DEBUG main org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=com.visa.demo.entity.TestEntity)
    - Returns
       - EntityReturnImpl(entity=com.visa.demo.entity.TestEntity, querySpaceUid=<gen:0>, path=com.visa.demo.entity.TestEntity)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.visa.demo.entity.TestEntity)
          - SQL table alias mapping - testentity0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG main org.hibernate.loader.entity.plan.EntityLoader - Static select for entity com.visa.demo.entity.TestEntity [UPGRADE_NOWAIT]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update
DEBUG main org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@567255]
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : name
DEBUG main org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
DEBUG main org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
DEBUG main org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=com.visa.demo.entity.TestEntity)
    - Returns
       - EntityReturnImpl(entity=com.visa.demo.entity.TestEntity, querySpaceUid=<gen:0>, path=com.visa.demo.entity.TestEntity)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.visa.demo.entity.TestEntity)
          - SQL table alias mapping - testentity0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG main org.hibernate.loader.entity.plan.EntityLoader - Static select for entity com.visa.demo.entity.TestEntity [UPGRADE_SKIPLOCKED]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update
DEBUG main org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4ee95c]
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : name
DEBUG main org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
DEBUG main org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
DEBUG main org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=com.visa.demo.entity.TestEntity)
    - Returns
       - EntityReturnImpl(entity=com.visa.demo.entity.TestEntity, querySpaceUid=<gen:0>, path=com.visa.demo.entity.TestEntity)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.visa.demo.entity.TestEntity)
          - SQL table alias mapping - testentity0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG main org.hibernate.loader.entity.plan.EntityLoader - Static select for entity com.visa.demo.entity.TestEntity [FORCE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update
DEBUG main org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a360ea]
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : name
DEBUG main org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
DEBUG main org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
DEBUG main org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=com.visa.demo.entity.TestEntity)
    - Returns
       - EntityReturnImpl(entity=com.visa.demo.entity.TestEntity, querySpaceUid=<gen:0>, path=com.visa.demo.entity.TestEntity)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.visa.demo.entity.TestEntity)
          - SQL table alias mapping - testentity0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG main org.hibernate.loader.entity.plan.EntityLoader - Static select for entity com.visa.demo.entity.TestEntity [PESSIMISTIC_READ]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? lock in share mode
DEBUG main org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27ba81]
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : name
DEBUG main org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
DEBUG main org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
DEBUG main org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=com.visa.demo.entity.TestEntity)
    - Returns
       - EntityReturnImpl(entity=com.visa.demo.entity.TestEntity, querySpaceUid=<gen:0>, path=com.visa.demo.entity.TestEntity)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.visa.demo.entity.TestEntity)
          - SQL table alias mapping - testentity0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG main org.hibernate.loader.entity.plan.EntityLoader - Static select for entity com.visa.demo.entity.TestEntity [PESSIMISTIC_WRITE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update
DEBUG main org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@156f2dd]
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : name
DEBUG main org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
DEBUG main org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
DEBUG main org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=com.visa.demo.entity.TestEntity)
    - Returns
       - EntityReturnImpl(entity=com.visa.demo.entity.TestEntity, querySpaceUid=<gen:0>, path=com.visa.demo.entity.TestEntity)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.visa.demo.entity.TestEntity)
          - SQL table alias mapping - testentity0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG main org.hibernate.loader.entity.plan.EntityLoader - Static select for entity com.visa.demo.entity.TestEntity [PESSIMISTIC_FORCE_INCREMENT]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update
DEBUG main org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2577d6]
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : name
DEBUG main org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
DEBUG main org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
DEBUG main org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=com.visa.demo.entity.TestEntity)
    - Returns
       - EntityReturnImpl(entity=com.visa.demo.entity.TestEntity, querySpaceUid=<gen:0>, path=com.visa.demo.entity.TestEntity)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.visa.demo.entity.TestEntity)
          - SQL table alias mapping - testentity0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG main org.hibernate.loader.entity.plan.EntityLoader - Static select for entity com.visa.demo.entity.TestEntity [OPTIMISTIC]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?
DEBUG main org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@15f8707]
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : name
DEBUG main org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
DEBUG main org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
DEBUG main org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=com.visa.demo.entity.TestEntity)
    - Returns
       - EntityReturnImpl(entity=com.visa.demo.entity.TestEntity, querySpaceUid=<gen:0>, path=com.visa.demo.entity.TestEntity)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.visa.demo.entity.TestEntity)
          - SQL table alias mapping - testentity0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG main org.hibernate.loader.entity.plan.EntityLoader - Static select for entity com.visa.demo.entity.TestEntity [OPTIMISTIC_FORCE_INCREMENT]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?
DEBUG main org.hibernate.loader.Loader - Static select for action ACTION_MERGE on entity com.visa.demo.entity.TestEntity: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?
DEBUG main org.hibernate.loader.Loader - Static select for action ACTION_REFRESH on entity com.visa.demo.entity.TestEntity: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?
DEBUG main org.hibernate.internal.SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@99a8db
DEBUG main org.hibernate.internal.SessionFactoryRegistry - Registering SessionFactory: 2e4eac78-0b77-42f8-b7d2-a42319a6300e (<unnamed>)
DEBUG main org.hibernate.internal.SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
DEBUG main org.hibernate.internal.SessionFactoryImpl - Instantiated session factory
INFO main org.hibernate.tool.hbm2ddl.SchemaUpdate - HHH000228: Running hbm2ddl schema update
INFO main org.hibernate.tool.hbm2ddl.SchemaUpdate - HHH000102: Fetching database metadata
INFO main org.hibernate.tool.hbm2ddl.SchemaUpdate - HHH000396: Updating schema
DEBUG main org.hibernate.cfg.Configuration - Processing hbm.xml files
DEBUG main org.hibernate.cfg.Configuration - Process annotated classes
DEBUG main org.hibernate.cfg.Configuration - Processing fk mappings (*ToOne and JoinedSubclass)
DEBUG main org.hibernate.cfg.Configuration - Processing extends queue
DEBUG main org.hibernate.cfg.Configuration - Processing extends queue
DEBUG main org.hibernate.cfg.Configuration - Processing collection mappings
DEBUG main org.hibernate.cfg.Configuration - Processing native query and ResultSetMapping mappings
DEBUG main org.hibernate.cfg.Configuration - Processing association property references
DEBUG main org.hibernate.cfg.Configuration - Creating tables' unique integer identifiers
DEBUG main org.hibernate.cfg.Configuration - Processing foreign key constraints
INFO main org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: housing_sales.test
INFO main org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [name, id]
INFO main org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: []
INFO main org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [primary]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Setting dialect [org.hibernate.dialect.MySQLDialect]
INFO main org.hibernate.tool.hbm2ddl.SchemaUpdate - HHH000232: Schema update complete
DEBUG main org.hibernate.internal.NamedQueryRepository - Checking 0 named HQL queries
DEBUG main org.hibernate.internal.NamedQueryRepository - Checking 0 named SQL queries
DEBUG main org.hibernate.stat.internal.StatisticsInitiator - Statistics initialized [enabled=false]
DEBUG main org.hibernate.jpa.internal.schemagen.JpaSchemaGenerator - No actions specified; doing nothing
DEBUG main org.hibernate.jpa.internal.EntityManagerFactoryRegistry - Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@d7f1ae
DEBUG main org.hibernate.jpa.internal.EntityManagerFactoryRegistry - Registering EntityManagerFactory: default 
DEBUG main org.hibernate.engine.transaction.spi.AbstractTransactionImpl - begin
DEBUG main org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Obtaining JDBC connection
DEBUG main org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Obtained JDBC connection
DEBUG main org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - initial autocommit status: false
DEBUG main org.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
DEBUG main org.hibernate.SQL - 
    insert 
    into
        test
        (name) 
    values
        (?)
DEBUG main org.hibernate.id.IdentifierGeneratorHelper - Natively generated identity: 18
DEBUG main org.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
DEBUG main org.hibernate.SQL - 
    insert 
    into
        test
        (name) 
    values
        (?)
DEBUG main org.hibernate.id.IdentifierGeneratorHelper - Natively generated identity: 19
DEBUG main org.hibernate.engine.transaction.spi.AbstractTransactionImpl - committing
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG main org.hibernate.internal.util.EntityPrinter - Listing entities:
DEBUG main org.hibernate.internal.util.EntityPrinter - com.visa.demo.entity.TestEntity{name=hehe, id=19}
DEBUG main org.hibernate.internal.util.EntityPrinter - com.visa.demo.entity.TestEntity{name=haha, id=18}
DEBUG main org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - committed JDBC Connection
DEBUG main org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Releasing JDBC connection
DEBUG main org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Released JDBC connection
DEBUG Thread-1 org.hibernate.internal.SessionFactoryImpl - HHH000031: Closing
DEBUG Thread-1 org.hibernate.service.internal.AbstractServiceRegistryImpl - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
DEBUG Thread-1 org.hibernate.boot.registry.internal.BootstrapServiceRegistryImpl - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
DEBUG Thread-1 org.hibernate.jpa.internal.EntityManagerFactoryRegistry - Remove: name=default
INFO Thread-1 com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed
INFO main com.visa.core.config.ResourcesLoader - DataSource
DEBUG main org.jboss.logging - Logging Provider: org.jboss.logging.Log4jLoggerProvider
DEBUG main org.hibernate.jpa.internal.util.LogHelper - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: sun.misc.Launcher$AppClassLoader@1db9742
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: {
	CreateTime:"2016-11-15 18:28:51",
	ActiveCount:0,
	PoolingCount:0,
	CreateCount:0,
	DestroyCount:0,
	CloseCount:0,
	ConnectCount:0,
	Connections:[
	]
}
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/visa%e6%96%87%e6%a1%a3/workSpace/housingSales/target/test-classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.visa.demo.entity.TestEntity]
	Mapping files names []
	Properties []
DEBUG main org.hibernate.integrator.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
DEBUG main org.hibernate.integrator.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
DEBUG main org.hibernate.integrator.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
DEBUG main org.hibernate.integrator.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
DEBUG main org.hibernate.boot.registry.selector.internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.dialect.Dialect] : [MySQL5] -> [org.hibernate.dialect.MySQL5Dialect] (replacing [org.hibernate.dialect.MySQL5Dialect])
DEBUG main org.hibernate.boot.registry.selector.internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.dialect.Dialect] : [MySQL5InnoDB] -> [org.hibernate.dialect.MySQL5InnoDBDialect] (replacing [org.hibernate.dialect.MySQL5InnoDBDialect])
INFO main org.hibernate.Version - HHH000412: Hibernate Core {4.3.6.Final}
INFO main org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found
INFO main org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist
DEBUG main org.hibernate.service.spi.ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@1c32e4f
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@1c32e4f
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1c32e4f
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@faad5a
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@1cd37c0
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@362b6b
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@93f6e1
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@93f6e1
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@93f6e1
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@383572
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@383572
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@383572
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@19be66c
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@19be66c
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@19be66c
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@cdb29f
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@cdb29f
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@cdb29f
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@1544ae6
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@1544ae6
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@1544ae6
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@1ebe38b
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@1ebe38b
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1ebe38b
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@df2c61
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@df2c61
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@df2c61
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1ed2870
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1ed2870
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1f22f3
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1f22f3
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@4094a5
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@4094a5
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@57b96d
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@94fd30
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@a2ddf3
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@a2ddf3
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@18be6e8
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@18be6e8
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@13e5463
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@13e5463
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@6276d8
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@6276d8
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@6276d8
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@c63c79
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@ba9639
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@ba9639
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@ba9639
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1ffbc6d
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@1a2bb97
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1a2bb97
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@8bcbd
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@8bcbd
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@26bff1
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@26bff1
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@16f1079
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@16f1079
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@166ca9d
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@166ca9d
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6a5539
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@17c4869
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@76cf48
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@76cf48
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@76cf48
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@b2384f
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@b2384f
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@b2384f
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@f9af83
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@cf09e8
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@cf09e8
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@cf09e8
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@31f68c
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@31f68c
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@31f68c
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@b32e3e
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@19a2c08
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@1cb4f5f
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1cb4f5f
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@194089b
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@1acdf2e
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1acdf2e
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@1835480
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1835480
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1b365ed
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@bada02
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@d3381f
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@1bba99
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1bba99
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@ac5762
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@17cf65c
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1bcf236
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@13ed2f0
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1ad9bb2
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@17d4a0d
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1862f56
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@12c404
INFO main org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {4.0.5.Final}
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
DEBUG main org.hibernate.cfg.Configuration - Preparing to build session factory with filters : {}
INFO main com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
DEBUG main org.hibernate.engine.jdbc.internal.JdbcServicesImpl - Database ->
       name : MySQL
    version : 5.6.25-log
      major : 5
      minor : 6
DEBUG main org.hibernate.engine.jdbc.internal.JdbcServicesImpl - Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.38 ( Revision: fe541c166cec739c74cc727c5da96c1028b4834a )
      major : 5
      minor : 1
DEBUG main org.hibernate.engine.jdbc.internal.JdbcServicesImpl - JDBC version : 4.0
DEBUG main org.hibernate.engine.jdbc.cursor.internal.StandardRefCursorSupport - Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
INFO main org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
DEBUG main org.hibernate.cfg.Configuration - Processing hbm.xml files
DEBUG main org.hibernate.cfg.Configuration - Process annotated classes
DEBUG main org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: com.visa.demo.entity.TestEntity
DEBUG main org.hibernate.cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG main org.hibernate.cfg.annotations.EntityBinder - Import with entity name TestEntity
DEBUG main org.hibernate.cfg.annotations.EntityBinder - Bind entity com.visa.demo.entity.TestEntity on table test
DEBUG main org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(test), mappingColumn=id, insertable=true, updatable=true, unique=false}
DEBUG main org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property id with lazy=false
DEBUG main org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.visa.demo.entity.TestEntity:id]
DEBUG main org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for id
DEBUG main org.hibernate.cfg.annotations.PropertyBinder - Building property id
DEBUG main org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(test), mappingColumn=name, insertable=true, updatable=true, unique=false}
DEBUG main org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property name with lazy=false
DEBUG main org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.visa.demo.entity.TestEntity:name]
DEBUG main org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for name
DEBUG main org.hibernate.cfg.annotations.PropertyBinder - Building property name
DEBUG main org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for id
DEBUG main org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for name
DEBUG main org.hibernate.cfg.Configuration - Processing fk mappings (*ToOne and JoinedSubclass)
DEBUG main org.hibernate.cfg.Configuration - Processing extends queue
DEBUG main org.hibernate.cfg.Configuration - Processing extends queue
DEBUG main org.hibernate.cfg.Configuration - Processing collection mappings
DEBUG main org.hibernate.cfg.Configuration - Processing native query and ResultSetMapping mappings
DEBUG main org.hibernate.cfg.Configuration - Processing association property references
DEBUG main org.hibernate.cfg.Configuration - Creating tables' unique integer identifiers
DEBUG main org.hibernate.cfg.Configuration - Processing foreign key constraints
DEBUG main org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
DEBUG main org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
DEBUG main org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
DEBUG main org.hibernate.cfg.SettingsFactory - Automatic flush during beforeCompletion(): disabled
DEBUG main org.hibernate.cfg.SettingsFactory - Automatic session close at end of transaction: disabled
DEBUG main org.hibernate.cfg.SettingsFactory - JDBC batch size: 15
DEBUG main org.hibernate.cfg.SettingsFactory - JDBC batch updates for versioned data: disabled
DEBUG main org.hibernate.cfg.SettingsFactory - Scrollable result sets: enabled
DEBUG main org.hibernate.cfg.SettingsFactory - Wrap result sets: disabled
DEBUG main org.hibernate.cfg.SettingsFactory - JDBC3 getGeneratedKeys(): enabled
DEBUG main org.hibernate.cfg.SettingsFactory - multi-tenancy strategy : NONE
DEBUG main org.hibernate.cfg.SettingsFactory - Connection release mode: auto
DEBUG main org.hibernate.cfg.SettingsFactory - Using BatchFetchStyle : LEGACY
DEBUG main org.hibernate.cfg.SettingsFactory - Maximum outer join fetch depth: 2
DEBUG main org.hibernate.cfg.SettingsFactory - Default batch fetch size: 1
DEBUG main org.hibernate.cfg.SettingsFactory - Generate SQL with comments: disabled
DEBUG main org.hibernate.cfg.SettingsFactory - Order SQL updates by primary key: disabled
DEBUG main org.hibernate.cfg.SettingsFactory - Order SQL inserts for batching: disabled
DEBUG main org.hibernate.cfg.SettingsFactory - Default null ordering: none
DEBUG main org.hibernate.cfg.SettingsFactory - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
INFO main org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory - HHH000397: Using ASTQueryTranslatorFactory
DEBUG main org.hibernate.cfg.SettingsFactory - Query language substitutions: {}
DEBUG main org.hibernate.cfg.SettingsFactory - JPA-QL strict compliance: disabled
DEBUG main org.hibernate.cfg.SettingsFactory - Second-level cache: enabled
DEBUG main org.hibernate.cfg.SettingsFactory - Query cache: disabled
DEBUG main org.hibernate.cache.internal.RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
DEBUG main org.hibernate.cfg.SettingsFactory - Optimize cache for minimal puts: disabled
DEBUG main org.hibernate.cfg.SettingsFactory - Structured second-level cache entries: disabled
DEBUG main org.hibernate.cfg.SettingsFactory - Second-level cache direct-reference entries: disabled
DEBUG main org.hibernate.cfg.SettingsFactory - Automatic eviction of collection cache: disabled
DEBUG main org.hibernate.cfg.SettingsFactory - Statistics: disabled
DEBUG main org.hibernate.cfg.SettingsFactory - Deleted entity synthetic identifier rollback: disabled
DEBUG main org.hibernate.cfg.SettingsFactory - Default entity-mode: pojo
DEBUG main org.hibernate.cfg.SettingsFactory - Named query checking : enabled
DEBUG main org.hibernate.cfg.SettingsFactory - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
DEBUG main org.hibernate.cfg.SettingsFactory - Allow initialization of lazy state outside session : : disabled
DEBUG main org.hibernate.cfg.SettingsFactory - JTA Track by Thread: enabled
DEBUG main org.hibernate.internal.SessionFactoryImpl - Building session factory
DEBUG main org.hibernate.internal.SessionFactoryImpl - Session factory constructed with filter configurations : {}
DEBUG main org.hibernate.internal.SessionFactoryImpl - Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=C:\Program Files (x86)\Java\jdk1.8.0_73\jre\bin, java.vm.version=25.73-b02, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) Client VM, file.encoding.pkg=sun.io, idea.launcher.port=7533, user.script=, user.country=CN, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=, java.vm.specification.name=Java Virtual Machine Specification, user.dir=E:\visa文档\workSpace\housingSales, javax.persistence.sharedCache.mode=UNSPECIFIED, java.runtime.version=1.8.0_73-b02, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.endorsed.dirs=C:\Program Files (x86)\Java\jdk1.8.0_73\jre\lib\endorsed, os.arch=x86, java.io.tmpdir=C:\Users\ADMINI~1\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 10, sun.jnu.encoding=GBK, java.library.path=C:\Program Files (x86)\Java\jdk1.8.0_73\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\ProgramData\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;D:\apache-maven-3.2.1\bin;C:\Program Files (x86)\Java\jdk1.8.0_73\bin;C:\Program Files (x86)\Microsoft SQL Server\90\Tools\binn\;C:\Program Files (x86)\Microsoft SQL Server\100\Tools\Binn\VSShell\Common7\IDE\;C:\Program Files (x86)\Microsoft SQL Server\100\Tools\Binn\;C:\Program Files\Microsoft SQL Server\100\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\100\DTS\Binn\;D:\Program Files\Ruby21-x64\bin;D:\Program Files\nodejs\;D:\Program Files\Git\cmd;C:\Program Files (x86)\IDM Computer Solutions\UltraEdit\;C:\Users\Administrator\AppData\Roaming\npm;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;D:\Program Files (x86)\sonar\sonar-scanner-2.5\bin;., hibernate.ejb.persistenceUnitName=default, java.specification.name=Java Platform API Specification, java.class.version=52.0, sun.management.compiler=HotSpot Client Compiler, os.version=10.0, user.home=C:\Users\Administrator, user.timezone=Asia/Shanghai, java.awt.printerjob=sun.awt.windows.WPrinterJob, java.specification.version=1.8, idea.launcher.bin.path=D:\JetBrains\IntelliJ IDEA 14.1.3\bin, file.encoding=UTF-8, javax.persistence.nonJtaDataSource={
	CreateTime:"2016-11-15 18:28:51",
	ActiveCount:0,
	PoolingCount:1,
	CreateCount:1,
	DestroyCount:0,
	CloseCount:1,
	ConnectCount:1,
	Connections:[
		{ID:19854726, ConnectTime:"2016-11-15 18:28:52", UseCount:1, LastActiveTime:"2016-11-15 18:28:52"}
	]
}, hibernate.format_sql=true, user.name=Administrator, java.class.path=D:\JetBrains\IntelliJ IDEA 14.1.3\lib\idea_rt.jar;D:\JetBrains\IntelliJ IDEA 14.1.3\plugins\junit\lib\junit-rt.jar;C:\Program Files (x86)\Java\jdk1.8.0_73\jre\lib\charsets.jar;C:\Program Files (x86)\Java\jdk1.8.0_73\jre\lib\deploy.jar;C:\Program Files (x86)\Java\jdk1.8.0_73\jre\lib\javaws.jar;C:\Program Files (x86)\Java\jdk1.8.0_73\jre\lib\jce.jar;C:\Program Files (x86)\Java\jdk1.8.0_73\jre\lib\jfr.jar;C:\Program Files (x86)\Java\jdk1.8.0_73\jre\lib\jfxswt.jar;C:\Program Files (x86)\Java\jdk1.8.0_73\jre\lib\jsse.jar;C:\Program Files (x86)\Java\jdk1.8.0_73\jre\lib\management-agent.jar;C:\Program Files (x86)\Java\jdk1.8.0_73\jre\lib\plugin.jar;C:\Program Files (x86)\Java\jdk1.8.0_73\jre\lib\resources.jar;C:\Program Files (x86)\Java\jdk1.8.0_73\jre\lib\rt.jar;C:\Program Files (x86)\Java\jdk1.8.0_73\jre\lib\ext\access-bridge-32.jar;C:\Program Files (x86)\Java\jdk1.8.0_73\jre\lib\ext\cldrdata.jar;C:\Program Files (x86)\Java\jdk1.8.0_73\jre\lib\ext\dnsns.jar;C:\Program Files (x86)\Java\jdk1.8.0_73\jre\lib\ext\jaccess.jar;C:\Program Files (x86)\Java\jdk1.8.0_73\jre\lib\ext\jfxrt.jar;C:\Program Files (x86)\Java\jdk1.8.0_73\jre\lib\ext\localedata.jar;C:\Program Files (x86)\Java\jdk1.8.0_73\jre\lib\ext\nashorn.jar;C:\Program Files (x86)\Java\jdk1.8.0_73\jre\lib\ext\sunec.jar;C:\Program Files (x86)\Java\jdk1.8.0_73\jre\lib\ext\sunjce_provider.jar;C:\Program Files (x86)\Java\jdk1.8.0_73\jre\lib\ext\sunmscapi.jar;C:\Program Files (x86)\Java\jdk1.8.0_73\jre\lib\ext\sunpkcs11.jar;C:\Program Files (x86)\Java\jdk1.8.0_73\jre\lib\ext\zipfs.jar;E:\visa文档\workSpace\housingSales\target\test-classes;E:\visa文档\workSpace\housingSales\target\classes;C:\Users\Administrator\.m2\repository\junit\junit\4.11\junit-4.11.jar;C:\Users\Administrator\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-context\4.0.5.RELEASE\spring-context-4.0.5.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-aop\4.0.5.RELEASE\spring-aop-4.0.5.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-beans\4.0.5.RELEASE\spring-beans-4.0.5.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-core\4.0.5.RELEASE\spring-core-4.0.5.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-expression\4.0.5.RELEASE\spring-expression-4.0.5.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-webmvc\4.0.5.RELEASE\spring-webmvc-4.0.5.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-web\4.0.5.RELEASE\spring-web-4.0.5.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-orm\4.0.5.RELEASE\spring-orm-4.0.5.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-jdbc\4.0.5.RELEASE\spring-jdbc-4.0.5.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-tx\4.0.5.RELEASE\spring-tx-4.0.5.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-test\4.0.5.RELEASE\spring-test-4.0.5.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\mockito\mockito-core\1.9.5\mockito-core-1.9.5.jar;C:\Users\Administrator\.m2\repository\org\objenesis\objenesis\1.0\objenesis-1.0.jar;C:\Users\Administrator\.m2\repository\com\jayway\jsonpath\json-path\0.9.1\json-path-0.9.1.jar;C:\Users\Administrator\.m2\repository\net\minidev\json-smart\1.2\json-smart-1.2.jar;C:\Users\Administrator\.m2\repository\org\slf4j\slf4j-api\1.7.5\slf4j-api-1.7.5.jar;C:\Users\Administrator\.m2\repository\org\slf4j\slf4j-nop\1.7.7\slf4j-nop-1.7.7.jar;C:\Users\Administrator\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Administrator\.m2\repository\javax\servlet\javax.servlet-api\3.1-b09\javax.servlet-api-3.1-b09.jar;C:\Users\Administrator\.m2\repository\javax\servlet\jstl\1.2\jstl-1.2.jar;C:\Users\Administrator\.m2\repository\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;C:\Users\Administrator\.m2\repository\commons-lang\commons-lang\2.6\commons-lang-2.6.jar;C:\Users\Administrator\.m2\repository\org\aspectj\aspectjweaver\1.8.1\aspectjweaver-1.8.1.jar;C:\Users\Administrator\.m2\repository\org\springframework\security\spring-security-web\3.2.4.RELEASE\spring-security-web-3.2.4.RELEASE.jar;C:\Users\Administrator\.m2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;C:\Users\Administrator\.m2\repository\org\springframework\security\spring-security-core\3.2.4.RELEASE\spring-security-core-3.2.4.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\security\spring-security-config\3.2.4.RELEASE\spring-security-config-3.2.4.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\hibernate\hibernate-core\4.3.6.Final\hibernate-core-4.3.6.Final.jar;C:\Users\Administrator\.m2\repository\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;C:\Users\Administrator\.m2\repository\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;C:\Users\Administrator\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;C:\Users\Administrator\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\Administrator\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\Administrator\.m2\repository\org\hibernate\common\hibernate-commons-annotations\4.0.5.Final\hibernate-commons-annotations-4.0.5.Final.jar;C:\Users\Administrator\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\Administrator\.m2\repository\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;C:\Users\Administrator\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Administrator\.m2\repository\org\jboss\jandex\1.1.0.Final\jandex-1.1.0.Final.jar;C:\Users\Administrator\.m2\repository\org\hibernate\hibernate-entitymanager\4.3.6.Final\hibernate-entitymanager-4.3.6.Final.jar;C:\Users\Administrator\.m2\repository\org\springframework\data\spring-data-jpa\1.7.0.RELEASE\spring-data-jpa-1.7.0.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\data\spring-data-commons\1.9.0.RELEASE\spring-data-commons-1.9.0.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\aspectj\aspectjrt\1.8.2\aspectjrt-1.8.2.jar;C:\Users\Administrator\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.7\jcl-over-slf4j-1.7.7.jar;C:\Users\Administrator\.m2\repository\com\alibaba\druid\1.0.18\druid-1.0.18.jar;C:\Program Files (x86)\Java\jdk1.8.0_73\lib\jconsole.jar;C:\Program Files (x86)\Java\jdk1.8.0_73\lib\tools.jar;C:\Users\Administrator\.m2\repository\mysql\mysql-connector-java\5.1.38\mysql-connector-java-5.1.38.jar;C:\Users\Administrator\.m2\repository\commons-fileupload\commons-fileupload\1.3.1\commons-fileupload-1.3.1.jar;C:\Users\Administrator\.m2\repository\commons-io\commons-io\2.4\commons-io-2.4.jar;C:\Users\Administrator\.m2\repository\com\alibaba\fastjson\1.1.41\fastjson-1.1.41.jar;C:\Users\Administrator\.m2\repository\commons-httpclient\commons-httpclient\3.1\commons-httpclient-3.1.jar;C:\Users\Administrator\.m2\repository\commons-codec\commons-codec\1.2\commons-codec-1.2.jar;C:\Users\Administrator\.m2\repository\net\sf\ehcache\ehcache-core\2.6.9\ehcache-core-2.6.9.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-context-support\4.0.5.RELEASE\spring-context-support-4.0.5.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\projectlombok\lombok\1.16.4\lombok-1.16.4.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, javax.persistence.validation.mode=AUTO, java.vm.specification.version=1.8, sun.arch.data.model=32, java.home=C:\Program Files (x86)\Java\jdk1.8.0_73\jre, sun.java.command=com.intellij.rt.execution.application.AppMain com.intellij.rt.execution.junit.JUnitStarter -ideVersion5 com.visa.demo.ServerTestTest,testTest2, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.specification.vendor=Oracle Corporation, user.language=zh, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_73, java.ext.dirs=C:\Program Files (x86)\Java\jdk1.8.0_73\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files (x86)\Java\jdk1.8.0_73\jre\lib\resources.jar;C:\Program Files (x86)\Java\jdk1.8.0_73\jre\lib\rt.jar;C:\Program Files (x86)\Java\jdk1.8.0_73\jre\lib\sunrsasign.jar;C:\Program Files (x86)\Java\jdk1.8.0_73\jre\lib\jsse.jar;C:\Program Files (x86)\Java\jdk1.8.0_73\jre\lib\jce.jar;C:\Program Files (x86)\Java\jdk1.8.0_73\jre\lib\charsets.jar;C:\Program Files (x86)\Java\jdk1.8.0_73\jre\lib\jfr.jar;C:\Program Files (x86)\Java\jdk1.8.0_73\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=windows, sun.cpu.isalist=pentium_pro+mmx pentium_pro pentium+mmx pentium i486 i386 i86}
DEBUG main org.hibernate.secure.spi.JaccIntegrator - Skipping JACC integration as it was not enabled
DEBUG main org.hibernate.engine.spi.CascadeStyles - External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: com.visa.demo.entity.TestEntity
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select id from test where id =?
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select testentity_.id, testentity_.name as name2_0_ from test testentity_ where testentity_.id=?
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into test (name, id) values (?, ?)
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update test set name=? where id=?
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from test where id=?
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Identity insert: insert into test (name) values (?)
DEBUG main org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@efc4b3]
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : name
DEBUG main org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
DEBUG main org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
DEBUG main org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=com.visa.demo.entity.TestEntity)
    - Returns
       - EntityReturnImpl(entity=com.visa.demo.entity.TestEntity, querySpaceUid=<gen:0>, path=com.visa.demo.entity.TestEntity)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.visa.demo.entity.TestEntity)
          - SQL table alias mapping - testentity0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG main org.hibernate.loader.entity.plan.EntityLoader - Static select for entity com.visa.demo.entity.TestEntity [NONE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?
DEBUG main org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a9c4b0]
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : name
DEBUG main org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
DEBUG main org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
DEBUG main org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=com.visa.demo.entity.TestEntity)
    - Returns
       - EntityReturnImpl(entity=com.visa.demo.entity.TestEntity, querySpaceUid=<gen:0>, path=com.visa.demo.entity.TestEntity)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.visa.demo.entity.TestEntity)
          - SQL table alias mapping - testentity0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG main org.hibernate.loader.entity.plan.EntityLoader - Static select for entity com.visa.demo.entity.TestEntity [READ]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?
DEBUG main org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a54d]
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : name
DEBUG main org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
DEBUG main org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
DEBUG main org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=com.visa.demo.entity.TestEntity)
    - Returns
       - EntityReturnImpl(entity=com.visa.demo.entity.TestEntity, querySpaceUid=<gen:0>, path=com.visa.demo.entity.TestEntity)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.visa.demo.entity.TestEntity)
          - SQL table alias mapping - testentity0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG main org.hibernate.loader.entity.plan.EntityLoader - Static select for entity com.visa.demo.entity.TestEntity [UPGRADE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update
DEBUG main org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d9b663]
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : name
DEBUG main org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
DEBUG main org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
DEBUG main org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=com.visa.demo.entity.TestEntity)
    - Returns
       - EntityReturnImpl(entity=com.visa.demo.entity.TestEntity, querySpaceUid=<gen:0>, path=com.visa.demo.entity.TestEntity)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.visa.demo.entity.TestEntity)
          - SQL table alias mapping - testentity0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG main org.hibernate.loader.entity.plan.EntityLoader - Static select for entity com.visa.demo.entity.TestEntity [UPGRADE_NOWAIT]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update
DEBUG main org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@567255]
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : name
DEBUG main org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
DEBUG main org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
DEBUG main org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=com.visa.demo.entity.TestEntity)
    - Returns
       - EntityReturnImpl(entity=com.visa.demo.entity.TestEntity, querySpaceUid=<gen:0>, path=com.visa.demo.entity.TestEntity)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.visa.demo.entity.TestEntity)
          - SQL table alias mapping - testentity0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG main org.hibernate.loader.entity.plan.EntityLoader - Static select for entity com.visa.demo.entity.TestEntity [UPGRADE_SKIPLOCKED]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update
DEBUG main org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4ee95c]
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : name
DEBUG main org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
DEBUG main org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
DEBUG main org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=com.visa.demo.entity.TestEntity)
    - Returns
       - EntityReturnImpl(entity=com.visa.demo.entity.TestEntity, querySpaceUid=<gen:0>, path=com.visa.demo.entity.TestEntity)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.visa.demo.entity.TestEntity)
          - SQL table alias mapping - testentity0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG main org.hibernate.loader.entity.plan.EntityLoader - Static select for entity com.visa.demo.entity.TestEntity [FORCE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update
DEBUG main org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a360ea]
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : name
DEBUG main org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
DEBUG main org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
DEBUG main org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=com.visa.demo.entity.TestEntity)
    - Returns
       - EntityReturnImpl(entity=com.visa.demo.entity.TestEntity, querySpaceUid=<gen:0>, path=com.visa.demo.entity.TestEntity)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.visa.demo.entity.TestEntity)
          - SQL table alias mapping - testentity0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG main org.hibernate.loader.entity.plan.EntityLoader - Static select for entity com.visa.demo.entity.TestEntity [PESSIMISTIC_READ]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? lock in share mode
DEBUG main org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27ba81]
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : name
DEBUG main org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
DEBUG main org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
DEBUG main org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=com.visa.demo.entity.TestEntity)
    - Returns
       - EntityReturnImpl(entity=com.visa.demo.entity.TestEntity, querySpaceUid=<gen:0>, path=com.visa.demo.entity.TestEntity)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.visa.demo.entity.TestEntity)
          - SQL table alias mapping - testentity0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG main org.hibernate.loader.entity.plan.EntityLoader - Static select for entity com.visa.demo.entity.TestEntity [PESSIMISTIC_WRITE]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update
DEBUG main org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@156f2dd]
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : name
DEBUG main org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
DEBUG main org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
DEBUG main org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=com.visa.demo.entity.TestEntity)
    - Returns
       - EntityReturnImpl(entity=com.visa.demo.entity.TestEntity, querySpaceUid=<gen:0>, path=com.visa.demo.entity.TestEntity)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.visa.demo.entity.TestEntity)
          - SQL table alias mapping - testentity0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG main org.hibernate.loader.entity.plan.EntityLoader - Static select for entity com.visa.demo.entity.TestEntity [PESSIMISTIC_FORCE_INCREMENT]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=? for update
DEBUG main org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2577d6]
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : name
DEBUG main org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
DEBUG main org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
DEBUG main org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=com.visa.demo.entity.TestEntity)
    - Returns
       - EntityReturnImpl(entity=com.visa.demo.entity.TestEntity, querySpaceUid=<gen:0>, path=com.visa.demo.entity.TestEntity)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.visa.demo.entity.TestEntity)
          - SQL table alias mapping - testentity0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG main org.hibernate.loader.entity.plan.EntityLoader - Static select for entity com.visa.demo.entity.TestEntity [OPTIMISTIC]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?
DEBUG main org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@15f8707]
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : name
DEBUG main org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
DEBUG main org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
DEBUG main org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=com.visa.demo.entity.TestEntity)
    - Returns
       - EntityReturnImpl(entity=com.visa.demo.entity.TestEntity, querySpaceUid=<gen:0>, path=com.visa.demo.entity.TestEntity)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.visa.demo.entity.TestEntity)
          - SQL table alias mapping - testentity0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG main org.hibernate.loader.entity.plan.EntityLoader - Static select for entity com.visa.demo.entity.TestEntity [OPTIMISTIC_FORCE_INCREMENT]: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?
DEBUG main org.hibernate.loader.Loader - Static select for action ACTION_MERGE on entity com.visa.demo.entity.TestEntity: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?
DEBUG main org.hibernate.loader.Loader - Static select for action ACTION_REFRESH on entity com.visa.demo.entity.TestEntity: select testentity0_.id as id1_0_0_, testentity0_.name as name2_0_0_ from test testentity0_ where testentity0_.id=?
DEBUG main org.hibernate.internal.SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@99a8db
DEBUG main org.hibernate.internal.SessionFactoryRegistry - Registering SessionFactory: 95da097a-3b79-462f-9636-b872818fa93a (<unnamed>)
DEBUG main org.hibernate.internal.SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
